69.
import numpy as np; import pandas as pd ;;   data=pd.read_csv("Iris.csv") data.head() ;;
X=data.iloc[:,1:5] y=data.iloc[:,5:6] y.head() ;;  from sklearn.preprocessing import LabelEncoder ; pr= LabelEncoder();  y=y.apply(pr.fit_transform) ;; y.head() ;;
from sklearn.model_selection import train_test_split ;; x_train,x_test,y_train,y_test=train_test_split(X,y,test_size=0.3,random_state=42)
from sklearn.preprocessing import StandardScaler ; scaler=StandardScaler() ; scaler.fit(x_train) ;; x_train=scaler.transform(x_train); x_test=scaler.transform(x_test) ;;
from sklearn.neural_network import MLPClassifier ;;  
model= MLPClassifier(hidden_layer_sizes=(10,10,10),max_iter=1000) ;;   model.fit(x_train,y_train.values.ravel()) ;;   pred=model.predict(x_test) ;; pred ;;
from sklearn.metrics import classification_report,confusion_matrix,accuracy_score
print("accuracy :",accuracy_score(y_test,pred))
print("classification_report") ;print(classification_report(y_test,pred))
print("confusion_matrix") ;  print(confusion_matrix(y_test,pred))




