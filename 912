912.import numpy as np ;import matplotlib.pyplot as plt ;import seaborn as sns;sns.set();;
from sklearn.datasets import fetch_20newsgroups; data = fetch_20newsgroups() ;data.target_names;; categories = ['talk.religion.misc', 'soc.religion.christian', 'sci.space', 'comp.graphics'] ;train = fetch_20newsgroups(subset='train', categories=categories) ;test = fetch_20newsgroups(subset ='test', categories=categories);; print(train.data[5]);;
from sklearn.feature_extraction.text import TfidfVectorizer; from sklearn.naive_bayes import MultinomialNB; from sklearn.pipeline import make_pipeline;   model=make_pipeline(TfidfVectorizer(), MultinomialNB());; 
 model.fit(train.data, train.target); labels = model.predict(test.data);;
from sklearn.metrics import confusion_matrix;mat = confusion_matrix(test.target, labels);sns.heatmap(mat.T, square=True, annot=True, fmt='d', cbar=False,
xticklabels=train.target_names, yticklabels=train.target_names);plt.xlabel('true label')
;plt.ylabel('predicted label');; mat ;; def predict_category(s, train=train, model=model): ;pred = model.predict([s]) ;return train.target_names[pred[0]];; predict_category('sending a payload to the ISS') ;; predict_category('discussing islam vs atheism');; predict_category('determining the screen resolution');;
 from sklearn.metrics import classification_report , confusion_matrix , accuracy_score;
print("classification_report : ");print(classification_report(test.target,labels));
print("confusion_matrix : ");print(confusion_matrix(test.target,labels));
print("Accuracy : ",accuracy_score(test.target,labels));;
